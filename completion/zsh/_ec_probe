#compdef ec_probe

_ec_probe() {
  _arguments \
    '(-h --help)'{-h,--help}'[show this help message and exit]'::'()'\
    '(-e --embedded-controller)'{-e+,--embedded-controller=}'[Specify embedded controller to use]':EC:'(ec_linux ec_sys_linux)'\
    ':command:_ec_probe_subcommands'\
    '*::arg:->args'
  for w in $line; do
    case $w in
      (dump) _ec_probe_dump; break;;
      (read) _ec_probe_read; break;;
      (write) _ec_probe_write; break;;
      (monitor) _ec_probe_monitor; break;;
    esac
  done
}

_ec_probe_subcommands() {
  local commands=(
    'dump:Dump all EC registers'
    'read:Read a byte from a EC register'
    'write:Write a byte to a EC register'
    'monitor:Monitor all EC registers for changes'
  )
  _describe -t commands 'ec_probe command' commands "$@"
}

_ec_probe_dump() {
  _arguments \
    '(-h --help)'{-h,--help}'[show this help message and exit]'::'()'
}

_ec_probe_read() {
  _arguments \
    '(-h --help)'{-h,--help}'[show this help message and exit]'::'()'\
    :'Register source':'({0..255..1})'
}

_ec_probe_write() {
  _arguments \
    '(-h --help)'{-h,--help}'[show this help message and exit]'::'()'\
    :'Register destination':'({0..255..1})'\
    :'Value to write':'({0..255..1})'
}

_ec_probe_monitor() {
  _arguments \
    '(-h --help)'{-h,--help}'[show this help message and exit]'::'()'\
    '(--interval -i)'{-i+,--interval=}'[Monitored timespan]':seconds:'({0..255})'\
    '(--timespan -t)'{-t+,--timespan=}'[Set poll intervall]':seconds:'({0..255})'\
    '(-r --report)'{-r+,--report=}'[Save all readings as a CSV file]':report:'()'\
    '(--clearly -c)'{-c,--clearly}'[Blanks out consecutive duplicate readings]'::'()'\
    '(-d --decimal)'{-d,--decimal}'[Output readings in decimal format instead of hexadecimal format]'::'()'
}

_ec_probe "$@"
